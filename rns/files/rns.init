#!/bin/sh /etc/rc.common

START=20
USE_PROCD=1

PROG="/usr/bin/rnsd"
RUN_DIR="/var/rns/.reticulum"
USER="rns"
USERID=142

ensure_user() {
	user_exists ${USER} ${USERID} || user_add ${USER} ${USERID} "Reticulum User" /var/rns /bin/ash
	group_exists ${USER} ${USERID} || group_add ${USER} ${USERID} && group_add_user ${USER} ${USER}
	group_add_user dialout ${USER}
}

ensure_storage() {
	mkdir -m 0755 -p ${RUN_DIR}
	chown -R ${USER}:${USER} ${RUN_DIR}
}

start_service() {
	config_load rns
	local enabled
	config_get_bool enabled main enabled 0
	
	if [ "$enabled" -eq 0 ]; then
		logger -t rns "Service not enabled"
		return 0
	fi
	
	ensure_user
	ensure_storage
	
	# Get configuration parameters
	local verbosity config_file service_mode
	config_get verbosity main verbosity "normal"
	config_get config_file main config_file ""
	config_get_bool service_mode main service_mode 1
	
	# Build command arguments
	local args=""
	case "$verbosity" in
		verbose) args="$args -v" ;;
		quiet) args="$args -q" ;;
		normal) ;;
	esac
	
	[ -n "$config_file" ] && args="$args --config $config_file"
	[ "$service_mode" -eq 1 ] && args="$args -s"
	
	logger -t rns "Running command: ${PROG} ${args}"
	
	procd_open_instance
	procd_set_param command ${PROG} ${args} 
	procd_set_param env HOME=${RUN_DIR}
	procd_set_param pidfile ${RUN_DIR}/rnsd.pid
	procd_set_param file /etc/config/rns
	[ -f "${RUN_DIR}/config" ] && procd_set_param file ${RUN_DIR}/config
	
	procd_set_param stderr 1
	procd_set_param stdout 1
	procd_set_param term_timeout 15
	procd_set_param user ${USER}
	procd_set_param respawn ${respawn_threshold:-3600} ${respawn_timeout:-10} ${respawn_retry:-5}
	
	procd_close_instance
}

reload_service() {
	logger -t rns "Reloading service..."
	stop
	start
}

service_triggers() {
	procd_add_reload_trigger "rns"
}
